#!/usr/bin/env bash

PATCHES_FOLDER=$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd)
[[ "$(pwd)" =~ flash ]] && FLASH=true

function header() {
    echo -e "\033[01;31m"
    echo -e "====$(for i in $(seq ${#1}); do echo -e "=\c"; done)===="
    echo -e "==  ${1}  =="
    echo -e "====$(for i in $(seq ${#1}); do echo -e "=\c"; done)===="
    echo -e "\033[0m"
}

function die() {
    echo -e "\033[01;31m"
    echo "${@}"
    echo -e "\033[0m"
    exit 1
}

APPROVED_CONFLICTS=( "Documentation/arm64/cpu-feature-registers.txt:4"
                     "arch/arm64/include/asm/cpucaps.h:2"
                     "arch/arm64/include/asm/cputype.h:3"
                     "arch/arm64/include/asm/processor.h:3"
                     "arch/arm64/include/asm/ptrace.h:2"
                     "arch/arm64/include/asm/sysreg.h:8"
                     "arch/arm64/include/uapi/asm/hwcap.h:4"
                     "arch/arm64/kernel/cpu_errata.c:20"
                     "arch/arm64/kernel/cpufeature.c:24"
                     "arch/arm64/kernel/cpuinfo.c:4"
                     "arch/arm64/kernel/process.c:2"
                     "arch/arm64/kernel/ssbd.c:1" )
readarray -t CONFLICTS <<< "$(git cf)"
if [[ -n "${CONFLICTS[*]}" ]]; then
    header "Resetting all conflicts"
    for CONFLICT in "${CONFLICTS[@]}"; do
        FOUND=false
        for APPROVED_CONFLICT in "${APPROVED_CONFLICTS[@]}"; do
            ACTION=$(echo "${APPROVED_CONFLICT}" | cut -d : -f 3)
            NOC=$(echo "${APPROVED_CONFLICT}" | cut -d : -f 2)
            APPROVED_CONFLICT=$(echo "${APPROVED_CONFLICT}" | cut -d : -f 1)
            [[ -z ${ACTION} ]] && ACTION=rf
            [[ ${CONFLICT} = ${APPROVED_CONFLICT} ]] && { FOUND=true; break; }
        done
        [[ ${NOC} -ne $(git lo HEAD..MERGE_HEAD "${CONFLICT}" | wc -l) ]] && die "${CONFLICT} resolution might be outdated!"
        if ${FOUND}; then
            case ${ACTION} in
                "rf") ACTION_STRING="Resetting" ;;
                "rm"*) ACTION_STRING="Removing" ;;
                *) die "Invalid action: ${ACTION}" ;;
            esac

            echo "${ACTION_STRING} ${CONFLICT}..."
            git "${ACTION}" "${CONFLICT}" &>/dev/null
        else
            die "${CONFLICT} not accounted for, bailing out!"
        fi
    done
    [[ -n "$(git cf)" ]] && die "Resetting conflicts failed!"

    git rf "arch/arm64"
    git rf "Documentation"
    header "Applying all patches"
    case "$(git cb)" in
        "kernel.lnx.4.14.r4-rel") AND_VER=10 ;;
        *) AND_VER=pie ;;
    esac
    git ap "${PATCHES_FOLDER}"/arm64-android-${AND_VER}.series || exit 1

    header "Committing merge"
    git fm || exit 1
fi
